name: "Build and populate cache"
on:
  pull_request:
  push:
  schedule:
    # rebuild everyday at 2:51
    # TIP: Choose a random time here so not all repositories are build at once:
    # https://www.random.org/clock-times/?num=1&earliest=01%3A00&latest=08%3A00&interval=5&format=html&rnd=new
    - cron:  '40 7 * * *'
jobs:
  tests:
    name: Build nix packages
    strategy:
      matrix:
        cachixName:
          - reedrw
        nixPath:
          - nixpkgs=channel:nixos-unstable
          - nixpkgs=channel:nixpkgs-unstable
          - nixpkgs=channel:nixos-20.09
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2.3.4

    - name: Install nix
      uses: cachix/install-nix-action@v12
      with:
        nix_path: "${{ matrix.nixPath }}"

    - name: Show nixpkgs version
      run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'

    - name: Setup cachix
      uses: cachix/cachix-action@v8
      if: ${{ matrix.cachixName != '<YOUR_CACHIX_NAME>' }}
      with:
        name: ${{ matrix.cachixName }}
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'

    - name: Build nix packages
      run: nix run nixpkgs.nix-build-uncached -c nix-build-uncached ci.nix -A cacheOutputs

  update:
    name: Trigger NUR update
    needs: tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nurRepo:
          - reedrw
    steps:
    - name: Trigger NUR update
      if: ${{ matrix.nurRepo != '<YOUR_REPO_NAME>' }}
      run: curl -XPOST "https://nur-update.herokuapp.com/update?repo=${{ matrix.nurRepo }}"

  telegram:
    name: Telegram
    needs: update
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v2.0.1

      - uses: yanzay/notify-telegram@v0.1.0
        with:
          chat: ${{ secrets.NOTIFICATION_CHAT_ID }}
          token: ${{ secrets.NOTIFICATION_TOKEN }}
          status: ${{ env.WORKFLOW_CONCLUSION }}
